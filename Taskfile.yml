version: '3'
tasks:
  default:
    cmds:
      - task --list-all
  ent:
    dir: "./pkg/ent"
    cmds:
      - go generate
  build:
    cmds:
      - go build -ldflags "-X main.GitCommitId=`git rev-parse HEAD` -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)'"  -mod vendor -o output/main ./cmd/main.go
  wire:
    dir: ./cmd/app/
    cmds:
      - wire
  run:
    cmds:
      - task: swag
      - go run main.go app start {{.CLI_ARGS}}
  conf:
    cmds:
      - vim conf/dev.conf.yaml
    interactive: true
  init:k:
    dir: "./pkg/services"
    cmds:
      - gowrap gen -init kit -n {{.CLI_ARGS}}
  init:s:
    dir: "./pkg/services"
    cmds:
      - gowrap gen -init service -n {{.CLI_ARGS}}
  init:a:
    dir: "./pkg/repository/api"
    cmds:
      - gowrap gen -init service -n {{.CLI_ARGS}}
  init:d:
    dir: "./pkg/repository/dao"
    cmds:
      - gowrap gen -init service -n {{.CLI_ARGS}}
  gen:k:
    dir: "./pkg/services/"
    cmds:
      - go generate ./{{.CLI_ARGS}}
  gen:s:
    dir: "./pkg/services/"
    cmds:
      - go generate ./{{.CLI_ARGS}}
  gen:s:all:
    dir: "./pkg/services/"
    cmds:
      - go generate ./...
  gen:a:
    dir: "./pkg/repository/api"
    cmds:
      - go generate ./{{.CLI_ARGS}}
  gen:d:
    dir: "./pkg/repository/dao"
    cmds:
      - go generate ./{{.CLI_ARGS}}
  gen:d:all:
    dir: "./pkg/repository/dao"
    cmds:
      - go generate ./...
  swag:
    cmds:
      - swag init -g cmd/app.go  -d ./