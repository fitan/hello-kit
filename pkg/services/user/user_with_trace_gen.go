package user

// Code generated by gowrap. DO NOT EDIT.
// template:
// gowrap: http://github.com/fitan/gowrap

import (
	"context"
	"encoding/json"
	"hello/pkg/ent"

	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/codes"
	semconv "go.opentelemetry.io/otel/semconv/v1.7.0"
	"go.opentelemetry.io/otel/trace"
)

// UserServiceWithTracing implements UserService interface instrumented with opentracing spans
type UserServiceWithTracing struct {
	UserService
}

// NewUserServiceWithTracing returns UserServiceWithTracing
func NewUserServiceWithTracing(base UserService) UserService {
	d := UserServiceWithTracing{
		UserService: base,
	}

	return d
}

// GetById implements UserService
func (_d UserServiceWithTracing) GetById(ctx context.Context, req GetByIdReq) (up1 *ent.User, err error) {
	var name = "UserService.GetById"
	_, span := otel.Tracer(name).Start(ctx, name)
	defer func() {
		if err != nil {
			l := map[string]interface{}{
				"params": map[string]interface{}{
					"req": req},
				"result": map[string]interface{}{
					"up1": up1,
					"err": err},
			}
			s, _ := json.Marshal(l)
			span.AddEvent(semconv.ExceptionEventName, trace.WithAttributes(semconv.ExceptionTypeKey.String("context"), semconv.ExceptionMessageKey.String(string(s))))
			span.SetStatus(codes.Error, err.Error())
		}
		span.End()
	}()
	return _d.UserService.GetById(ctx, req)
}

// GetList implements UserService
func (_d UserServiceWithTracing) GetList(ctx context.Context, req GetListReq) (upa1 []*ent.User, err error) {
	var name = "UserService.GetList"
	_, span := otel.Tracer(name).Start(ctx, name)
	defer func() {
		if err != nil {
			l := map[string]interface{}{
				"params": map[string]interface{}{
					"req": req},
				"result": map[string]interface{}{
					"upa1": upa1,
					"err":  err},
			}
			s, _ := json.Marshal(l)
			span.AddEvent(semconv.ExceptionEventName, trace.WithAttributes(semconv.ExceptionTypeKey.String("context"), semconv.ExceptionMessageKey.String(string(s))))
			span.SetStatus(codes.Error, err.Error())
		}
		span.End()
	}()
	return _d.UserService.GetList(ctx, req)
}
