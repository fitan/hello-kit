// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package services

import (
	"github.com/fitan/gink/transport/http"
	"github.com/gin-gonic/gin"
	"github.com/go-kit/kit/endpoint"
	"github.com/google/wire"
	"go.uber.org/zap"
	"hello/pkg/services/hello"
)

// Injectors from wire.go:

func InitHttp(r *gin.Engine, log *zap.SugaredLogger, appName string, eps []endpoint.Middleware, ops []http.ServerOption) wireServices {
	baseService := hello.NewBasicHelloService(log)
	v := hello.NewServiceMiddleware(log, appName)
	helloService := hello.NewService(baseService, v)
	v2 := hello.NewEndpointMiddleware(log, eps)
	endpoints := hello.NewEndpoints(helloService, v2)
	v3 := hello.NewServiceOption(ops)
	wireHttpHandler := hello.NewHTTPHandler(r, endpoints, v3)
	servicesWireServices := wireServices{
		hello: wireHttpHandler,
	}
	return servicesWireServices
}

// wire.go:

type wireServices struct {
	hello hello.WireHttpHandler
}

var helloSet = wire.NewSet(hello.NewBasicHelloService, hello.NewService, hello.NewEndpointMiddleware, hello.NewServiceMiddleware, hello.NewEndpoints, hello.NewServiceOption, hello.NewHTTPHandler)

var set = wire.NewSet(helloSet, wire.Struct(new(wireServices), "*"))
