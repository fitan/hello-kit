package baidu

// Code generated by gowrap. DO NOT EDIT.
// template:
// gowrap: http://github.com/fitan/gowrap

import (
	"context"

	"go.opentelemetry.io/otel/trace"
	"go.uber.org/zap"
)

// BaiduServiceWithLog implements BaiduService that is instrumented with logging
type BaiduServiceWithLog struct {
	_log  *zap.SugaredLogger
	_base BaiduService
}

// NewBaiduServiceWithLog instruments an implementation of the BaiduService with simple logging
func NewBaiduServiceWithLog(base BaiduService, log *zap.SugaredLogger) BaiduServiceWithLog {
	return BaiduServiceWithLog{
		_base: base,
		_log:  log,
	}
}

// GetRoot implements BaiduService
func (_d BaiduServiceWithLog) GetRoot(ctx context.Context) (s1 string) {

	_log := _d._log.With(zap.String("traceId", trace.SpanFromContext(ctx).SpanContext().TraceID().String()))

	defer func() {
		_log.Debugw("BaiduServiceWithLog calling GetRoot", "params", map[string]interface{}{}, "results", map[string]interface{}{
			"s1": s1})

	}()
	return _d._base.GetRoot(ctx)
}
