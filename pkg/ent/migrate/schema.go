// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuditsColumns holds the columns for the "audits" table.
	AuditsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "query", Type: field.TypeString, Nullable: true},
		{Name: "method", Type: field.TypeString, Nullable: true},
		{Name: "request", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "response", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "header", Type: field.TypeString, Nullable: true},
		{Name: "status_code", Type: field.TypeInt, Nullable: true},
		{Name: "remote_ip", Type: field.TypeString, Nullable: true},
		{Name: "client_ip", Type: field.TypeString, Nullable: true},
		{Name: "cost_time", Type: field.TypeString, Nullable: true},
	}
	// AuditsTable holds the schema information for the "audits" table.
	AuditsTable = &schema.Table{
		Name:       "audits",
		Columns:    AuditsColumns,
		PrimaryKey: []*schema.Column{AuditsColumns[0]},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "aname", Type: field.TypeString},
		{Name: "comments", Type: field.TypeString},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// ResourcesColumns holds the columns for the "resources" table.
	ResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "key", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "action", Type: field.TypeString},
		{Name: "comments", Type: field.TypeString},
		{Name: "resource_next", Type: field.TypeInt, Nullable: true},
	}
	// ResourcesTable holds the schema information for the "resources" table.
	ResourcesTable = &schema.Table{
		Name:       "resources",
		Columns:    ResourcesColumns,
		PrimaryKey: []*schema.Column{ResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resources_resources_next",
				Columns:    []*schema.Column{ResourcesColumns[8]},
				RefColumns: []*schema.Column{ResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "aname", Type: field.TypeString},
		{Name: "comments", Type: field.TypeString},
		{Name: "classes", Type: field.TypeEnum, Enums: []string{"app", "middleware"}},
		{Name: "lang", Type: field.TypeString},
		{Name: "git", Type: field.TypeString},
		{Name: "project_services", Type: field.TypeInt, Nullable: true},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "services_projects_services",
				Columns:    []*schema.Column{ServicesColumns[9]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TblServicetreeColumns holds the columns for the "tbl_servicetree" table.
	TblServicetreeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "name", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "aname", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "pnode", Type: field.TypeInt32, Nullable: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "type", Type: field.TypeInt32, Nullable: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "key", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "origin", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(255)"}},
	}
	// TblServicetreeTable holds the schema information for the "tbl_servicetree" table.
	TblServicetreeTable = &schema.Table{
		Name:       "tbl_servicetree",
		Columns:    TblServicetreeColumns,
		PrimaryKey: []*schema.Column{TblServicetreeColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "pass_word", Type: field.TypeString},
		{Name: "token", Type: field.TypeString},
		{Name: "enable", Type: field.TypeBool},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuditsTable,
		ProjectsTable,
		ResourcesTable,
		ServicesTable,
		TblServicetreeTable,
		UsersTable,
	}
)

func init() {
	ResourcesTable.ForeignKeys[0].RefTable = ResourcesTable
	ServicesTable.ForeignKeys[0].RefTable = ProjectsTable
	TblServicetreeTable.Annotation = &entsql.Annotation{
		Table: "tbl_servicetree",
	}
}
