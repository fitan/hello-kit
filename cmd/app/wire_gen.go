// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/oklog/run"
	"hello/pkg/repository"
	"hello/pkg/repository/api/baidu"
	"hello/pkg/repository/api/taobao"
	"hello/pkg/repository/dao/user"
	"hello/pkg/services"
	"hello/pkg/services/casbin"
	"hello/pkg/services/hello"
	user2 "hello/pkg/services/user"
)

// Injectors from wire.go:

//var appSet = wire.NewSet(wire.Struct(App{}, "*"))
func InitApp(r *gin.Engine, g *run.Group, name ConfName) (App, error) {
	myConf, err := initConf(name)
	if err != nil {
		return App{}, err
	}
	base := baidu.NewBase(myConf)
	sugaredLogger := initLog(myConf)
	v := baidu.NewBaiduApiMiddleware(sugaredLogger)
	baiduApi := baidu.NewBaiduApi(base, v)
	taobaoBase := taobao.NewBase(myConf)
	v2 := taobao.NewTaobaoApiMiddleware(sugaredLogger)
	taobaoApi := taobao.NewTaoApi(taobaoBase, v2)
	client, err := initEnt(myConf)
	if err != nil {
		return App{}, err
	}
	baseService := user.NewBasicService(client)
	v3 := user.NewServiceMiddleware(sugaredLogger)
	userService := user.NewService(baseService, v3)
	repositoryRepository := &repository.Repository{
		Baidu:  baiduApi,
		Taobao: taobaoApi,
		User:   userService,
	}
	helloBaseService := hello.NewBasicHelloService(sugaredLogger, repositoryRepository)
	v4 := hello.NewServiceMiddleware(sugaredLogger)
	helloService := hello.NewService(helloBaseService, v4)
	v5 := initEndpointMiddleware()
	v6 := hello.NewEndpointMiddleware(sugaredLogger, v5)
	endpoints := hello.NewEndpoints(helloService, v6)
	v7 := initHttpServerOption()
	v8 := hello.NewServiceOption(v7)
	httpHandler := hello.NewHTTPHandler(r, endpoints, v8)
	repository2 := repository.Repository{
		Baidu:  baiduApi,
		Taobao: taobaoApi,
		User:   userService,
	}
	casbinBaseService := casbin.NewBasicService()
	v9 := casbin.NewServiceMiddleware(sugaredLogger)
	casbinService := casbin.NewService(casbinBaseService, v9)
	userBaseService := user2.NewBasicService(repository2, casbinService, client)
	v10 := user2.NewServiceMiddleware(sugaredLogger)
	userUserService := user2.NewService(userBaseService, v10)
	mws := user2.NewEndpointMiddleware(sugaredLogger, v5)
	userEndpoints := user2.NewEndpoints(userUserService, mws)
	ops := user2.NewServiceOption(v7)
	userHttpHandler := user2.NewHTTPHandler(r, userEndpoints, ops)
	servicesServices := &services.Services{
		Hello: httpHandler,
		User:  userHttpHandler,
	}
	tracerProvider := initTracer(myConf)
	db, err := initDb(myConf)
	if err != nil {
		return App{}, err
	}
	profiler, err := initPyroscope(myConf)
	if err != nil {
		return App{}, err
	}
	enforcer, err := initCasbin(myConf)
	if err != nil {
		return App{}, err
	}
	appInitCancelInterrupt := initCancelInterrupt(g)
	appInitMetricsEndpoint := initMetricsEndpoint(g, myConf)
	appInitMicro, err := initMicro(g, r, myConf)
	if err != nil {
		return App{}, err
	}
	app := App{
		r:                   r,
		repository:          repositoryRepository,
		services:            servicesServices,
		g:                   g,
		conf:                myConf,
		log:                 sugaredLogger,
		tp:                  tracerProvider,
		db:                  db,
		ent:                 client,
		pyroscope:           profiler,
		casbin:              enforcer,
		InitCancelInterrupt: appInitCancelInterrupt,
		InitMetricsEndpoint: appInitMetricsEndpoint,
		InitMicro:           appInitMicro,
	}
	return app, nil
}

// wire.go:

var confSet = wire.NewSet(initConf)

var logSet = wire.NewSet(initLog)

var traceSet = wire.NewSet(initTracer)

var dbSet = wire.NewSet(initDb)

var entSet = wire.NewSet(initEnt)

var pyroscopeSet = wire.NewSet(initPyroscope)

var casbinSet = wire.NewSet(initCasbin)

// repo.api.service
var baiduHttpSet = wire.NewSet(baidu.NewBaiduApi, baidu.NewBase, baidu.NewBaiduApiMiddleware)

var taobaoHttpSet = wire.NewSet(taobao.NewTaoApi, taobao.NewBase, taobao.NewTaobaoApiMiddleware)

// repo.dao.service
var userDaoSet = wire.NewSet(user.NewBasicService, user.NewServiceMiddleware, user.NewService)

var repoSet = wire.NewSet(userDaoSet, baiduHttpSet, taobaoHttpSet, wire.Struct(new(repository.Repository), "*"))

// http service
var casbinServiceSet = wire.NewSet(casbin.NewBasicService, casbin.NewService, casbin.NewServiceMiddleware)

var helloServiceSet = wire.NewSet(hello.NewBasicHelloService, hello.NewService, hello.NewEndpointMiddleware, hello.NewServiceMiddleware, hello.NewEndpoints, hello.NewServiceOption, hello.NewHTTPHandler)

var userServiceSet = wire.NewSet(user2.NewBasicService, user2.NewService, user2.NewEndpointMiddleware, user2.NewServiceMiddleware, user2.NewEndpoints, user2.NewServiceOption, user2.NewHTTPHandler)

var servicesSet = wire.NewSet(casbinServiceSet, userServiceSet, helloServiceSet, wire.Struct(new(services.Services), "*"))

var mwSet = wire.NewSet(initEndpointMiddleware, initHttpServerOption)

var gSet = wire.NewSet(initCancelInterrupt, initMetricsEndpoint, initMicro)
