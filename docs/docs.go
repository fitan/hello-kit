// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/audit": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/audit.AuditRestCreateBodySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Audit"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/audits": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "ClientIPContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "CostTimeContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "HeaderContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "MethodContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "QueryContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "RemoteIPContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "RequestContains",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ResponseContains",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "StatusCodeEQ",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "URLContains",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.AuditRestByQueriesAllRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.AuditBaseUpdateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.AuditBaseCreateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ent.Audit"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/audits/{auditId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "auditId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.AuditBaseGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/audit.AuditRestUpdateByIdBodySwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "auditId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Audit"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AuditService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "auditId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/audit.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/project": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.ProjectRestCreateBodySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ProjectRestByQueriesAllRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ProjectBaseUpdateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ProjectBaseCreateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ent.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/projects/{projectId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ProjectBaseGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.ProjectRestUpdateByIdBodySwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/projects/{projectId}/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ProjectRestGetServicesByProjectIdRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProjectService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ServiceBaseCreateReq"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/project.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/resource": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource.ResourceRestCreateBodySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Resource"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ResourceRestByQueriesAllRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ResourceBaseUpdateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ResourceBaseCreateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ent.Resource"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/resources/{resourceId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ResourceBaseGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource.ResourceRestUpdateByIdBodySwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Resource"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ResourceService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resource.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/service": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.ServiceRestCreateBodySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Service"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ServiceRestByQueriesAllRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ServiceBaseUpdateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ServiceBaseCreateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ent.Service"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/services/{serviceId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ServiceBaseGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.ServiceRestUpdateByIdBodySwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Service"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/services/{serviceId}/project": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.ProjectBaseGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ServiceService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.ServiceRestCreateProjectByServiceIdBodySwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/service.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.Service"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserRestCreateBodySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.User"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "AgeEQ",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "NameEQ",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "NameNotIn",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "_limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "_page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "acs",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.UserRestByQueriesAllRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.UserBaseUpdateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.UserBaseCreateReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ent.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.UserBaseGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserRestUpdateByIdBodySwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ent.User"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserService"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user.SwagResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "audit.AuditRestCreateBodySwag": {
            "type": "object",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "cost_time": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "remote_ip": {
                    "type": "string"
                },
                "request": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "audit.AuditRestUpdateByIdBodySwag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "audit.SwagResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "ent.Audit": {
            "type": "object",
            "properties": {
                "client_ip": {
                    "description": "ClientIP holds the value of the \"client_ip\" field.",
                    "type": "string"
                },
                "cost_time": {
                    "description": "CostTime holds the value of the \"cost_time\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "header": {
                    "description": "Header holds the value of the \"header\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "method": {
                    "description": "Method holds the value of the \"method\" field.",
                    "type": "string"
                },
                "query": {
                    "description": "Query holds the value of the \"query\" field.",
                    "type": "string"
                },
                "remote_ip": {
                    "description": "RemoteIP holds the value of the \"remote_ip\" field.",
                    "type": "string"
                },
                "request": {
                    "description": "Request holds the value of the \"request\" field.",
                    "type": "string"
                },
                "response": {
                    "description": "Response holds the value of the \"response\" field.",
                    "type": "string"
                },
                "status_code": {
                    "description": "StatusCode holds the value of the \"status_code\" field.",
                    "type": "integer"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                },
                "url": {
                    "description": "URL holds the value of the \"url\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AuditBaseCreateReq": {
            "type": "object",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "cost_time": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "remote_ip": {
                    "type": "string"
                },
                "request": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ent.AuditBaseGetRes": {
            "type": "object",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "cost_time": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "remote_ip": {
                    "type": "string"
                },
                "request": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ent.AuditBaseUpdateReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "ent.AuditRestByQueriesAllRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.AuditBaseGetRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ent.Project": {
            "type": "object",
            "properties": {
                "aname": {
                    "description": "Aname holds the value of the \"aname\" field.",
                    "type": "string"
                },
                "comments": {
                    "description": "Comments holds the value of the \"comments\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ProjectQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.ProjectEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ProjectBaseCreateReq": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ent.ProjectBaseGetRes": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ent.ProjectBaseUpdateReq": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ent.ProjectEdges": {
            "type": "object",
            "properties": {
                "services": {
                    "description": "Services holds the value of the services edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Service"
                    }
                }
            }
        },
        "ent.ProjectRestByQueriesAllRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ProjectBaseGetRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ent.ProjectRestGetServicesByProjectIdRes": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ServiceBaseGetRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ent.Resource": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Action holds the value of the \"action\" field.",
                    "type": "string"
                },
                "comments": {
                    "description": "Comments holds the value of the \"comments\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "key": {
                    "description": "Key holds the value of the \"key\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "path": {
                    "description": "Path holds the value of the \"path\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ResourceBaseCreateReq": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ent.ResourceBaseGetRes": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ent.ResourceBaseUpdateReq": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ent.ResourceRestByQueriesAllRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ResourceBaseGetRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ent.Service": {
            "type": "object",
            "properties": {
                "aname": {
                    "description": "Aname holds the value of the \"aname\" field.",
                    "type": "string"
                },
                "classes": {
                    "description": "Classes holds the value of the \"classes\" field.",
                    "type": "string"
                },
                "comments": {
                    "description": "Comments holds the value of the \"comments\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ServiceQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.ServiceEdges"
                },
                "git": {
                    "description": "Git holds the value of the \"git\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "lang": {
                    "description": "Lang holds the value of the \"lang\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ServiceBaseCreateReq": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "classes": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "git": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ent.ServiceBaseGetRes": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "classes": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "git": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ent.ServiceBaseUpdateReq": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "classes": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "git": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ent.ServiceEdges": {
            "type": "object",
            "properties": {
                "project": {
                    "description": "Project holds the value of the project edge.",
                    "$ref": "#/definitions/ent.Project"
                }
            }
        },
        "ent.ServiceRestByQueriesAllRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ServiceBaseGetRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age holds the value of the \"age\" field.",
                    "type": "integer"
                },
                "enable": {
                    "description": "Enable holds the value of the \"enable\" field.",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "pass_word": {
                    "description": "PassWord holds the value of the \"pass_word\" field.",
                    "type": "string"
                },
                "token": {
                    "description": "Token holds the value of the \"token\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UserBaseCreateReq": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pass_word": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "ent.UserBaseGetRes": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pass_word": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "ent.UserBaseUpdateReq": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pass_word": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "ent.UserRestByQueriesAllRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.UserBaseGetRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "project.ProjectRestCreateBodySwag": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "project.ProjectRestUpdateByIdBodySwag": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "project.SwagResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "resource.ResourceRestCreateBodySwag": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "resource.ResourceRestUpdateByIdBodySwag": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "resource.SwagResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "service.ServiceRestCreateBodySwag": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "classes": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "git": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.ServiceRestCreateProjectByServiceIdBodySwag": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.ServiceRestUpdateByIdBodySwag": {
            "type": "object",
            "properties": {
                "aname": {
                    "type": "string"
                },
                "classes": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "git": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.SwagResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "user.SwagResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "user.UserRestCreateBodySwag": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pass_word": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UserRestUpdateByIdBodySwag": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pass_word": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
