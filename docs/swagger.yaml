basePath: /
definitions:
  ent.Pod:
    properties:
      cluster_name:
        description: |-
          ClusterName holds the value of the "cluster_name" field.
          集群标识
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      detail:
        description: |-
          Detail holds the value of the "detail" field.
          详细内容
        type: string
      edges:
        $ref: '#/definitions/ent.PodEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PodQuery when eager-loading is set.
      host_ip:
        description: |-
          HostIP holds the value of the "host_ip" field.
          主机IP
        type: string
      id:
        description: ID of the ent.
        type: integer
      message:
        description: |-
          Message holds the value of the "message" field.
          消息
        type: string
      namespace:
        description: |-
          Namespace holds the value of the "namespace" field.
          所属项目空间
        type: string
      phase:
        description: |-
          Phase holds the value of the "phase" field.
          阶段
        type: string
      pod_ip:
        description: |-
          PodIP holds the value of the "pod_ip" field.
          PodIP
        type: string
      pod_name:
        description: |-
          PodName holds the value of the "pod_name" field.
          pod名称
        type: string
      reason:
        description: |-
          Reason holds the value of the "reason" field.
          原因
        type: string
      resource_version:
        description: |-
          ResourceVersion holds the value of the "resource_version" field.
          资源版本号
        type: string
      service_name:
        description: |-
          ServiceName holds the value of the "service_name" field.
          应用名称
        type: string
      start_time:
        description: |-
          StartTime holds the value of the "start_time" field.
          启动时间
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  ent.PodBaseCreateReq:
    properties:
      clusterName:
        type: string
      detail:
        type: string
      hostIP:
        type: string
      message:
        type: string
      namespace:
        type: string
      phase:
        type: string
      podIP:
        type: string
      podName:
        type: string
      reason:
        type: string
      resourceVersion:
        type: string
      serviceName:
        type: string
      startTime:
        type: string
    type: object
  ent.PodBaseGetRes:
    properties:
      clusterName:
        type: string
      detail:
        type: string
      hostIP:
        type: string
      id:
        type: integer
      message:
        type: string
      namespace:
        type: string
      phase:
        type: string
      podIP:
        type: string
      podName:
        type: string
      reason:
        type: string
      resourceVersion:
        type: string
      serviceName:
        type: string
      startTime:
        type: string
    type: object
  ent.PodBaseUpdateReq:
    properties:
      clusterName:
        type: string
      detail:
        type: string
      hostIP:
        type: string
      id:
        type: integer
      message:
        type: string
      namespace:
        type: string
      phase:
        type: string
      podIP:
        type: string
      podName:
        type: string
      reason:
        type: string
      resourceVersion:
        type: string
      serviceName:
        type: string
      startTime:
        type: string
    type: object
  ent.PodEdges:
    properties:
      servicetree:
        $ref: '#/definitions/ent.SpiderDevTblServicetree'
        description: Servicetree holds the value of the servicetree edge.
    type: object
  ent.PodRestByQueriesRes:
    properties:
      list:
        items:
          $ref: '#/definitions/ent.PodBaseGetRes'
        type: array
      total:
        type: integer
    type: object
  ent.SpiderDevTblServicetree:
    properties:
      aname:
        description: Aname holds the value of the "aname" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      key:
        description: Key holds the value of the "key" field.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      origin:
        description: Origin holds the value of the "origin" field.
        type: string
      pnode:
        description: Pnode holds the value of the "pnode" field.
        type: integer
      type:
        description: Type holds the value of the "type" field.
        type: integer
    type: object
  ent.SpiderDevTblServicetreeBaseGetRes:
    properties:
      id:
        type: integer
    type: object
  ent.User:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.UserBaseCreateReq:
    properties:
      age:
        type: integer
      name:
        type: string
    type: object
  ent.UserBaseGetRes:
    properties:
      age:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  ent.UserBaseUpdateReq:
    properties:
      age:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  ent.UserEdges:
    properties:
      pods:
        description: Pods holds the value of the pods edge.
        items:
          $ref: '#/definitions/ent.Pod'
        type: array
    type: object
  ent.UserRestByQueriesRes:
    properties:
      list:
        items:
          $ref: '#/definitions/ent.UserBaseGetRes'
        type: array
      total:
        type: integer
    type: object
  ent.UserRestGetPodsSliceByUserIdRes:
    properties:
      list:
        items:
          $ref: '#/definitions/ent.PodBaseGetRes'
        type: array
      total:
        type: integer
    type: object
  hello.SwagResponse:
    properties:
      data: {}
      traceId:
        type: string
    type: object
  pod.CreateBodySwag:
    properties:
      clusterName:
        type: string
      detail:
        type: string
      hostIP:
        type: string
      message:
        type: string
      namespace:
        type: string
      phase:
        type: string
      podIP:
        type: string
      podName:
        type: string
      reason:
        type: string
      resourceVersion:
        type: string
      serviceName:
        type: string
      startTime:
        type: string
    type: object
  pod.CreateServicetreeByPodIdBodySwag:
    type: object
  pod.SwagResponse:
    properties:
      data: {}
      traceId:
        type: string
    type: object
  pod.UpdateByIdBodySwag:
    properties:
      clusterName:
        type: string
      detail:
        type: string
      hostIP:
        type: string
      id:
        type: integer
      message:
        type: string
      namespace:
        type: string
      phase:
        type: string
      podIP:
        type: string
      podName:
        type: string
      reason:
        type: string
      resourceVersion:
        type: string
      serviceName:
        type: string
      startTime:
        type: string
    type: object
  say.SwagResponse:
    properties:
      data: {}
      traceId:
        type: string
    type: object
  say1.SwagResponse:
    properties:
      data: {}
      traceId:
        type: string
    type: object
  user.CreateBodySwag:
    properties:
      age:
        type: integer
      name:
        type: string
    type: object
  user.SwagResponse:
    properties:
      data: {}
      traceId:
        type: string
    type: object
  user.UpdateByIdBodySwag:
    properties:
      age:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /hello/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/hello.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.PodBaseGetRes'
              type: object
      tags:
      - HelloService
  /pod:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pod.CreateBodySwag'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.Pod'
              type: object
      tags:
      - PodService
  /pods:
    delete:
      consumes:
      - application/json
      parameters:
      - collectionFormat: multi
        in: query
        items:
          type: integer
        name: ids
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  type: boolean
              type: object
      tags:
      - PodService
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: ClusterNameEQ
        type: string
      - in: query
        name: DetailEQ
        type: string
      - in: query
        name: HostIPEQ
        type: string
      - in: query
        name: MessageEQ
        type: string
      - in: query
        name: NamespaceEQ
        type: string
      - in: query
        name: PhaseEQ
        type: string
      - in: query
        name: PodIPEQ
        type: string
      - in: query
        name: PodNameEQ
        type: string
      - in: query
        name: ReasonEQ
        type: string
      - in: query
        name: ResourceVersionEQ
        type: string
      - in: query
        name: ServiceNameEQ
        type: string
      - in: query
        name: StartTimeEQ
        type: string
      - in: query
        name: _limit
        type: integer
      - in: query
        name: _page
        type: integer
      - enum:
        - acs
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: sortBy
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.PodRestByQueriesRes'
              type: object
      tags:
      - PodService
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/ent.PodBaseCreateReq'
          type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/ent.Pod'
                  type: array
              type: object
      tags:
      - PodService
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/ent.PodBaseUpdateReq'
          type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  type: boolean
              type: object
      tags:
      - PodService
  /pods/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  type: boolean
              type: object
      tags:
      - PodService
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.PodBaseGetRes'
              type: object
      tags:
      - PodService
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pod.UpdateByIdBodySwag'
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.Pod'
              type: object
      tags:
      - PodService
  /pods/{id}/servicetree:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.SpiderDevTblServicetreeBaseGetRes'
              type: object
      tags:
      - PodService
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pod.CreateServicetreeByPodIdBodySwag'
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/pod.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.Pod'
              type: object
      tags:
      - PodService
  /say1pod/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/say1.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.PodBaseGetRes'
              type: object
      tags:
      - Say1Service
  /saypod/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/say.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.PodBaseGetRes'
              type: object
      tags:
      - SayService
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.CreateBodySwag'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.User'
              type: object
      tags:
      - UserService
  /users:
    delete:
      consumes:
      - application/json
      parameters:
      - collectionFormat: multi
        in: query
        items:
          type: integer
        name: ids
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  type: boolean
              type: object
      tags:
      - UserService
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: AgeEQ
        type: integer
      - in: query
        name: NameEQ
        type: string
      - collectionFormat: multi
        in: query
        items:
          type: string
        name: NameNotIn
        type: array
      - in: query
        name: _limit
        type: integer
      - in: query
        name: _page
        type: integer
      - enum:
        - acs
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: sortBy
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.UserRestByQueriesRes'
              type: object
      tags:
      - UserService
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/ent.UserBaseCreateReq'
          type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/ent.User'
                  type: array
              type: object
      tags:
      - UserService
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/ent.UserBaseUpdateReq'
          type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  type: boolean
              type: object
      tags:
      - UserService
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  type: boolean
              type: object
      tags:
      - UserService
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.UserBaseGetRes'
              type: object
      tags:
      - UserService
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.UpdateByIdBodySwag'
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.User'
              type: object
      tags:
      - UserService
  /users/{id}/pods:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: ClusterNameEQ
        type: string
      - in: query
        name: DetailEQ
        type: string
      - in: query
        name: HostIPEQ
        type: string
      - in: query
        name: MessageEQ
        type: string
      - in: query
        name: NamespaceEQ
        type: string
      - in: query
        name: PhaseEQ
        type: string
      - in: query
        name: PodIPEQ
        type: string
      - in: query
        name: PodNameEQ
        type: string
      - in: query
        name: ReasonEQ
        type: string
      - in: query
        name: ResourceVersionEQ
        type: string
      - in: query
        name: ServiceNameEQ
        type: string
      - in: query
        name: StartTimeEQ
        type: string
      - in: query
        name: _limit
        type: integer
      - in: query
        name: _page
        type: integer
      - enum:
        - acs
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: sortBy
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.UserRestGetPodsSliceByUserIdRes'
              type: object
      tags:
      - UserService
  /users/{id}/podsslice:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/ent.PodBaseCreateReq'
          type: array
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.SwagResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.User'
              type: object
      tags:
      - UserService
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
